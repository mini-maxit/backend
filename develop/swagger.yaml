basePath: /api/v1.
definitions:
  APIError:
    properties:
      data:
        $ref: '#/definitions/errorStruct'
      ok:
        type: boolean
    type: object
  APIResponse-Submission:
    properties:
      data:
        $ref: '#/definitions/Submission'
      ok:
        type: boolean
    type: object
  APIResponse-User:
    properties:
      data:
        $ref: '#/definitions/User'
      ok:
        type: boolean
    type: object
  APIResponse-array_Group:
    properties:
      data:
        items:
          $ref: '#/definitions/Group'
        type: array
      ok:
        type: boolean
    type: object
  APIResponse-array_LanguageConfig:
    properties:
      data:
        items:
          $ref: '#/definitions/LanguageConfig'
        type: array
      ok:
        type: boolean
    type: object
  APIResponse-array_Task:
    properties:
      data:
        items:
          $ref: '#/definitions/Task'
        type: array
      ok:
        type: boolean
    type: object
  APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_AvailableContest:
    properties:
      data:
        items:
          $ref: '#/definitions/AvailableContest'
        type: array
      ok:
        type: boolean
    type: object
  APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Submission:
    properties:
      data:
        items:
          $ref: '#/definitions/Submission'
        type: array
      ok:
        type: boolean
    type: object
  APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_TaskWithContestStats:
    properties:
      data:
        items:
          $ref: '#/definitions/TaskWithContestStats'
        type: array
      ok:
        type: boolean
    type: object
  APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_User:
    properties:
      data:
        items:
          $ref: '#/definitions/User'
        type: array
      ok:
        type: boolean
    type: object
  APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_UserContestsWithStats:
    properties:
      data:
        items:
          $ref: '#/definitions/UserContestsWithStats'
        type: array
      ok:
        type: boolean
    type: object
  APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_IDResponse:
    properties:
      data:
        $ref: '#/definitions/IDResponse'
      ok:
        type: boolean
    type: object
  APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse:
    properties:
      data:
        $ref: '#/definitions/MessageResponse'
      ok:
        type: boolean
    type: object
  APIResponse-github_com_mini-maxit_backend_package_domain_schemas_Contest:
    properties:
      data:
        $ref: '#/definitions/Contest'
      ok:
        type: boolean
    type: object
  APIResponse-github_com_mini-maxit_backend_package_domain_schemas_Group:
    properties:
      data:
        $ref: '#/definitions/Group'
      ok:
        type: boolean
    type: object
  APIResponse-github_com_mini-maxit_backend_package_domain_schemas_TaskCreateResponse:
    properties:
      data:
        $ref: '#/definitions/TaskCreateResponse'
      ok:
        type: boolean
    type: object
  APIResponse-github_com_mini-maxit_backend_package_domain_schemas_TaskDetailed:
    properties:
      data:
        $ref: '#/definitions/TaskDetailed'
      ok:
        type: boolean
    type: object
  APIResponse-github_com_mini-maxit_backend_package_domain_schemas_WorkerStatus:
    properties:
      data:
        $ref: '#/definitions/WorkerStatus'
      ok:
        type: boolean
    type: object
  APIResponse-routes_AuthResponse:
    properties:
      data:
        $ref: '#/definitions/AuthResponse'
      ok:
        type: boolean
    type: object
  AuthResponse:
    properties:
      accessToken:
        type: string
      expiresAt:
        type: string
    type: object
  AvailableContest:
    properties:
      createdAt:
        type: string
      createdBy:
        type: integer
      description:
        type: string
      endAt:
        type: string
      id:
        type: integer
      name:
        type: string
      participantCount:
        type: integer
      registrationStatus:
        description: '"registered", "canRegister", "awaitingApproval", "registrationClosed"'
        type: string
      startAt:
        type: string
      status:
        description: '"upcoming", "ongoing", "past"'
        type: string
      taskCount:
        type: integer
      updatedAt:
        type: string
    type: object
  Contest:
    properties:
      createdAt:
        type: string
      createdBy:
        type: integer
      description:
        type: string
      endAt:
        type: string
      id:
        type: integer
      name:
        type: string
      participantCount:
        type: integer
      startAt:
        type: string
      status:
        description: '"upcoming", "ongoing", "past"'
        type: string
      taskCount:
        type: integer
      updatedAt:
        type: string
    type: object
  ContestWithStats:
    properties:
      createdAt:
        type: string
      createdBy:
        type: integer
      description:
        type: string
      endAt:
        type: string
      id:
        type: integer
      name:
        type: string
      participantCount:
        type: integer
      solvedTaskCount:
        type: integer
      startAt:
        type: string
      status:
        description: '"upcoming", "ongoing", "past"'
        type: string
      taskCount:
        type: integer
      updatedAt:
        type: string
    type: object
  CreateContest:
    properties:
      description:
        type: string
      endAt:
        type: string
      isRegistrationOpen:
        type: boolean
      isSubmissionOpen:
        type: boolean
      isVisible:
        type: boolean
      name:
        maxLength: 100
        minLength: 3
        type: string
      startAt:
        type: string
    required:
    - name
    type: object
  CreateGroup:
    properties:
      name:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - name
    type: object
  EditContest:
    properties:
      description:
        type: string
      endAt:
        type: string
      isRegistrationOpen:
        type: boolean
      isSubmissionOpen:
        type: boolean
      isVisible:
        type: boolean
      name:
        maxLength: 100
        minLength: 3
        type: string
      startAt:
        type: string
    type: object
  EditGroup:
    properties:
      name:
        maxLength: 50
        minLength: 3
        type: string
    type: object
  Group:
    properties:
      createdAt:
        type: string
      createdBy:
        type: integer
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  IDResponse:
    properties:
      id:
        type: integer
    type: object
  LanguageConfig:
    properties:
      fileExtension:
        type: string
      id:
        type: integer
      language:
        type: string
      version:
        type: string
    type: object
  MessageResponse:
    properties:
      message:
        type: string
    type: object
  PutInputOutput:
    properties:
      memoryLimit:
        type: integer
      order:
        type: integer
      timeLimit:
        type: integer
    type: object
  PutInputOutputRequest:
    properties:
      limits:
        items:
          $ref: '#/definitions/PutInputOutput'
        type: array
    type: object
  Submission:
    properties:
      checkedAt:
        type: string
      id:
        type: integer
      language:
        $ref: '#/definitions/LanguageConfig'
      languageId:
        type: integer
      order:
        type: integer
      result:
        $ref: '#/definitions/SubmissionResult'
      status:
        type: string
      submittedAt:
        type: string
      task:
        $ref: '#/definitions/Task'
      taskId:
        type: integer
      user:
        $ref: '#/definitions/User'
      userId:
        type: integer
    type: object
  SubmissionResult:
    properties:
      code:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      message:
        type: string
      submissionId:
        type: integer
      testResults:
        items:
          $ref: '#/definitions/TestResult'
        type: array
    type: object
  Task:
    properties:
      createdAt:
        type: string
      createdBy:
        type: integer
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  TaskCreateResponse:
    properties:
      id:
        type: integer
    type: object
  TaskDetailed:
    properties:
      createdAt:
        type: string
      createdBy:
        type: integer
      createdByName:
        type: string
      descriptionUrl:
        type: string
      groupIds:
        items:
          type: integer
        type: array
      id:
        type: integer
      title:
        type: string
    type: object
  TaskWithContestStats:
    properties:
      attemptCount:
        description: Number of submission attempts by the user
        type: integer
      bestScore:
        description: Best score achieved by the user (percentage of passed tests)
        type: number
      createdAt:
        type: string
      createdBy:
        type: integer
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  TestResult:
    properties:
      id:
        type: integer
      inputOutputId:
        type: integer
      passed:
        type: boolean
      submissionResultId:
        type: integer
    type: object
  User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        $ref: '#/definitions/UserRole'
      surname:
        type: string
      username:
        type: string
    type: object
  UserChangePassword:
    properties:
      newPassword:
        maxLength: 50
        minLength: 8
        type: string
      newPasswordConfirm:
        maxLength: 50
        minLength: 8
        type: string
      oldPassword:
        type: string
    required:
    - newPassword
    - newPasswordConfirm
    type: object
  UserContestsWithStats:
    properties:
      ongoing:
        items:
          $ref: '#/definitions/ContestWithStats'
        type: array
      past:
        items:
          $ref: '#/definitions/ContestWithStats'
        type: array
      upcoming:
        items:
          $ref: '#/definitions/ContestWithStats'
        type: array
    type: object
  UserEdit:
    properties:
      email:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/UserRole'
      surname:
        type: string
      username:
        type: string
    type: object
  UserIDs:
    properties:
      userIDs:
        items:
          type: integer
        type: array
    type: object
  UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  UserRegisterRequest:
    properties:
      confirmPassword:
        type: string
      email:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      password:
        maxLength: 50
        minLength: 8
        type: string
      surname:
        maxLength: 50
        minLength: 3
        type: string
      username:
        maxLength: 30
        minLength: 3
        type: string
    required:
    - confirmPassword
    - email
    - name
    - password
    - surname
    - username
    type: object
  UserRole:
    enum:
    - student
    - teacher
    - admin
    type: string
    x-enum-varnames:
    - UserRoleStudent
    - UserRoleTeacher
    - UserRoleAdmin
  WorkerStatus:
    properties:
      busyWorkers:
        type: integer
      statusTime:
        type: string
      totalWorkers:
        type: integer
      workerStatus:
        additionalProperties:
          type: string
        type: object
    type: object
  errorStruct:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
info:
  contact: {}
  title: Mini-Maxit API
  version: 1.0.0
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Logs in a user with email and password, returns JWT tokens
      parameters:
      - description: User Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-routes_AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Login a user
      tags:
      - auth
  /auth/logout:
    post:
      description: Logs out a user by clearing the refresh token cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
      summary: Logout a user
      tags:
      - auth
  /auth/refresh:
    post:
      description: Refreshes JWT tokens using a valid refresh token from cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-routes_AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Refresh JWT tokens
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers a user with name, surname, email, username and password,
        returns JWT tokens
      parameters:
      - description: User Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/APIResponse-routes_AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Register a user
      tags:
      - auth
  /contest/:
    post:
      consumes:
      - application/json
      description: Create a new contest
      parameters:
      - description: Create Contest
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateContest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_IDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Create a contest
      tags:
      - contest
  /contest/{id}:
    delete:
      description: Delete a contest by ID
      parameters:
      - description: Contest ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Delete a contest
      tags:
      - contest
    get:
      description: Get contest details by ID
      parameters:
      - description: Contest ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_package_domain_schemas_Contest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get a contest
      tags:
      - contest
    put:
      consumes:
      - application/json
      description: Edit contest details
      parameters:
      - description: Contest ID
        in: path
        name: id
        required: true
        type: integer
      - description: Edit Contest
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/EditContest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_package_domain_schemas_Contest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Edit a contest
      tags:
      - contest
  /contest/{id}/register:
    post:
      description: Create a pending registration for a contest (requires contest creator
        approval)
      parameters:
      - description: Contest ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Register for a contest
      tags:
      - contest
  /contest/{id}/tasks:
    get:
      description: Get tasks associated with a specific contest including best score
        and attempt count for the current user
      parameters:
      - description: Contest ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_TaskWithContestStats'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get tasks for a contest with submission statistics
      tags:
      - contest
  /contest/ongoing:
    get:
      description: Get contests that are currently running with pagination
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_AvailableContest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get ongoing contests
      tags:
      - contest
  /contest/past:
    get:
      description: Get contests that have ended with pagination
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_AvailableContest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get past contests
      tags:
      - contest
  /contest/upcoming:
    get:
      description: Get contests that haven't started yet with pagination
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_AvailableContest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get upcoming contests
      tags:
      - contest
  /group/:
    get:
      description: Get all groups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_Group'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all groups
      tags:
      - group
    post:
      consumes:
      - application/json
      description: Create a group
      parameters:
      - description: Create Group
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_IDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Create a group
      tags:
      - group
  /group/{id}:
    get:
      description: Get a group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_package_domain_schemas_Group'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get a group
      tags:
      - group
    put:
      consumes:
      - application/json
      description: Edit a group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      - description: Edit Group
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/EditGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_package_domain_schemas_Group'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Edit a group
      tags:
      - group
  /group/{id}/users:
    delete:
      consumes:
      - application/json
      description: Delete users from a group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      - description: User IDs
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserIDs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Delete users from a group
      tags:
      - group
    get:
      description: Get users in a group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get users in a group
      tags:
      - group
    post:
      consumes:
      - application/json
      description: Add users to a group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      - description: User IDs
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserIDs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Add users to a group
      tags:
      - group
  /submission:
    get:
      description: Depending on the user role, this endpoint will return all submissions
        for the current user.
      parameters:
      - description: Limit the number of returned submissions
        in: query
        name: limit
        type: integer
      - description: Offset the returned submissions
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Submission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all submissions for the current user
      tags:
      - submission
  /submission/{id}:
    get:
      description: If the user is a student, the submission must belong to the user.
      parameters:
      - description: Submission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-Submission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get a submission by ID
      tags:
      - submission
  /submission/group/{id}:
    get:
      description: If the user is a student, it fails with 403 Forbidden.
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      - description: Limit the number of returned submissions
        in: query
        name: limit
        type: integer
      - description: Offset the returned submissions
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Submission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all submissions for a group
      tags:
      - submission
  /submission/languages:
    get:
      description: Get all available languages for submitting solutions.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_LanguageConfig'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all available languages
      tags:
      - submission
  /submission/submit:
    post:
      consumes:
      - multipart/form-data
      description: The solution is uploaded to the FileStorage service and a submission
        is created in the database.
      parameters:
      - description: Task ID
        in: formData
        name: taskID
        required: true
        type: integer
      - description: Solution file
        in: formData
        name: solution
        required: true
        type: file
      - description: Language ID
        in: formData
        name: languageID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              format: int64
              type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Submit a solution
      tags:
      - submission
  /submission/task/{id}:
    get:
      description: If the user is a student and has no access to this task, it fails
        with 403 Forbidden.
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Limit the number of returned submissions
        in: query
        name: limit
        type: integer
      - description: Offset the returned submissions
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Submission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all submissions for a task
      tags:
      - submission
  /submission/user/{id}:
    get:
      description: If the user is a student, it fails with 403 Forbidden.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Limit the number of returned submissions
        in: query
        name: limit
        type: integer
      - description: Offset the returned submissions
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Submission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all submissions for a user
      tags:
      - submission
  /submission/user/{id}/short:
    get:
      description: If the user is a student, it fails with 403 Forbidden.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Limit the number of returned submissions
        in: query
        name: limit
        type: integer
      - description: Offset the returned submissions
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Submission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all submissions for a user
      tags:
      - submission
  /task/:
    get:
      description: Returns all tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_Task'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all tasks
      tags:
      - task
    post:
      consumes:
      - multipart/form-data
      description: Uploads a task to the FileStorage service
      parameters:
      - description: Name of the task
        in: formData
        name: title
        required: true
        type: string
      - description: Task archive
        in: formData
        name: archive
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_package_domain_schemas_TaskCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Upload a task
      tags:
      - task
  /task/{id}:
    delete:
      description: Deletes a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Delete a task
      tags:
      - task
    get:
      description: Returns a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_package_domain_schemas_TaskDetailed'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get a task
      tags:
      - task
    patch:
      description: Updates a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: New title for the task
        in: formData
        name: title
        type: string
      - description: New archive for the task
        in: formData
        name: archive
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Update a task
      tags:
      - task
  /task/{id}/assign/groups:
    post:
      description: Assigns a task to groups by task ID and group IDs
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Group IDs
        in: body
        name: groupIDs
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Assign a task to groups
      tags:
      - task
  /task/{id}/assign/users:
    post:
      description: Assigns a task to users by task ID and user IDs
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: User IDs
        in: body
        name: userIDs
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Assign a task to users
      tags:
      - task
  /task/{id}/limits:
    get:
      description: Gets task limits by task ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Gets task limits
      tags:
      - task
    put:
      description: Updates task limits by task ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task limits
        in: body
        name: limits
        required: true
        schema:
          $ref: '#/definitions/PutInputOutputRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Updates task limits
      tags:
      - task
  /task/{id}/unassign/groups:
    delete:
      description: Unassigns a task from groups by task ID and group IDs
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Group IDs
        in: body
        name: groupIDs
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Unassign a task from groups
      tags:
      - task
  /task/{id}/unassign/users:
    delete:
      description: Unassigns a task from users by task ID and user IDs
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: User IDs
        in: body
        name: userIDs
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Unassign a task from users
      tags:
      - task
  /task/group/{id}:
    get:
      description: Returns all tasks for a group by ID
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all tasks for a group
      tags:
      - task
  /user/:
    get:
      description: Get all users
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-User'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all users
      tags:
      - user
  /user/{id}:
    get:
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get user by ID
      tags:
      - user
    patch:
      description: Edit user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User Edit Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UserEdit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Edit user
      tags:
      - user
  /user/{id}/contests:
    get:
      description: Get contests for a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_UserContestsWithStats'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get contests for a user
      tags:
      - user
  /user/{id}/password:
    patch:
      description: Change user password
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User Change Password Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UserChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_internal_api_http_httputils_MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Change user password
      tags:
      - user
  /user/me:
    get:
      description: Get current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-User'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
      summary: Get current user
      tags:
      - user
  /worker/status:
    get:
      description: Returns the current status of all worker nodes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-github_com_mini-maxit_backend_package_domain_schemas_WorkerStatus'
        "401":
          description: Not authorized - requires teacher or admin role
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/APIError'
        "504":
          description: Gateway timeout - worker status request timed out
          schema:
            $ref: '#/definitions/APIError'
      summary: Get worker status
      tags:
      - worker
swagger: "2.0"
