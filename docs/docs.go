// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/refresh": {
            "post": {
                "description": "Refreshes JWT tokens using a valid refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh JWT tokens",
                "parameters": [
                    {
                        "description": "Refresh Token Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_JWTTokens"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/group/": {
            "get": {
                "description": "Get all groups",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Get all groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Group"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Create a group",
                "parameters": [
                    {
                        "description": "Create Group",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.CreateGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-int64"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/group/{id}": {
            "get": {
                "description": "Get a group",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Get a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_Group"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Edit a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Edit Group",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.EditGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_Group"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/group/{id}/users": {
            "get": {
                "description": "Get users in a group",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Get users in a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add users to a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Add users to a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User IDs",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.UserIDs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete users from a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Delete users from a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User IDs",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.UserIDs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Logs in a user with email and password, returns JWT tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "User Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_JWTTokens"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Registers a user with name, surname, email, username and password, returns JWT tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a user",
                "parameters": [
                    {
                        "description": "User Register Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_JWTTokens"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/submission": {
            "get": {
                "description": "Depending on the user role, this endpoint will return all submissions for the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "Get all submissions for the current user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit the number of returned submissions",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset the returned submissions",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Session Token",
                        "name": "Session",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Submission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/submission/group/{id}": {
            "get": {
                "description": "If the user is a student, it fails with 403 Forbidden.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "Get all submissions for a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of returned submissions",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset the returned submissions",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Session Token",
                        "name": "Session",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Submission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/submission/languages": {
            "get": {
                "description": "Get all available languages for submitting solutions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "Get all available languages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_LanguageConfig"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/submission/task/{id}": {
            "get": {
                "description": "If the user is a student and has no access to this task, it fails with 403 Forbidden.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "Get all submissions for a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of returned submissions",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset the returned submissions",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Session Token",
                        "name": "Session",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Submission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/submission/user/{id}": {
            "get": {
                "description": "If the user is a student, it fails with 403 Forbidden.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "Get all submissions for a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of returned submissions",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset the returned submissions",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Session Token",
                        "name": "Session",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Submission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/submission/user/{id}/short": {
            "get": {
                "description": "If the user is a student, it fails with 403 Forbidden.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "Get all submissions for a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of returned submissions",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset the returned submissions",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Session Token",
                        "name": "Session",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Submission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/submission/{id}": {
            "get": {
                "description": "If the user is a student, the submission must belong to the user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "Get a submission by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session Token",
                        "name": "Session",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_Submission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/task/": {
            "get": {
                "description": "Returns all tasks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get all tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Task"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "Uploads a task to the FileStorage service",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Upload a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the task",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Task archive",
                        "name": "archive",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_TaskCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/task/group/{id}": {
            "get": {
                "description": "Returns all tasks for a group by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get all tasks for a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/task/{id}": {
            "get": {
                "description": "Returns a task by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_TaskDetailed"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a task by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Delete a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a task by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Update a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New title for the task",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "New archive for the task",
                        "name": "archive",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/task/{id}/assign/groups": {
            "post": {
                "description": "Assigns a task to groups by task ID and group IDs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Assign a task to groups",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Group IDs",
                        "name": "groupIDs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/task/{id}/assign/users": {
            "post": {
                "description": "Assigns a task to users by task ID and user IDs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Assign a task to users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User IDs",
                        "name": "userIDs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/task/{id}/limits": {
            "get": {
                "description": "Gets task limits by task ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Gets task limits",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates task limits by task ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Updates task limits",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task limits",
                        "name": "limits",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.PutInputOutputRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/task/{id}/unassign/groups": {
            "delete": {
                "description": "Unassigns a task from groups by task ID and group IDs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Unassign a task from groups",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Group IDs",
                        "name": "groupIDs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/task/{id}/unassign/users": {
            "delete": {
                "description": "Unassigns a task from users by task ID and user IDs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Unassign a task from users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User IDs",
                        "name": "userIDs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "description": "Get all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_User"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/user/email": {
            "get": {
                "description": "Get user by email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Get user by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Edit user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Edit Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.UserEdit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/user/{id}/password": {
            "patch": {
                "description": "Change user password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Change Password Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.UserChangePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        },
        "/worker/status": {
            "get": {
                "description": "Returns the current status of all worker nodes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "worker"
                ],
                "summary": "Get worker status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_WorkerStatus"
                        }
                    },
                    "401": {
                        "description": "Not authorized - requires teacher or admin role",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    },
                    "504": {
                        "description": "Gateway timeout - worker status request timed out",
                        "schema": {
                            "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIError": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_mini-maxit_backend_internal_api_http_httputils.errorStruct"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Group": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.Group"
                    }
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_LanguageConfig": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.LanguageConfig"
                    }
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Submission": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.Submission"
                    }
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-array_github_com_mini-maxit_backend_package_domain_schemas_Task": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.Task"
                    }
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_Group": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.Group"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_JWTTokens": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.JWTTokens"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_Submission": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.Submission"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_SubmitResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.SubmitResponse"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_TaskCreateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.TaskCreateResponse"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_TaskDetailed": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.TaskDetailed"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_User": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.User"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-github_com_mini-maxit_backend_package_domain_schemas_WorkerStatus": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.WorkerStatus"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-int64": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "integer"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.APIResponse-string": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "github_com_mini-maxit_backend_internal_api_http_httputils.errorStruct": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.CreateGroup": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.EditGroup": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.Group": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.JWTTokens": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenType": {
                    "type": "string"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.LanguageConfig": {
            "type": "object",
            "properties": {
                "fileExtension": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.PutInputOutput": {
            "type": "object",
            "properties": {
                "memoryLimit": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "timeLimit": {
                    "type": "integer"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.PutInputOutputRequest": {
            "type": "object",
            "properties": {
                "limits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.PutInputOutput"
                    }
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.Submission": {
            "type": "object",
            "properties": {
                "checkedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "language": {
                    "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.LanguageConfig"
                },
                "languageId": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "result": {
                    "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.SubmissionResult"
                },
                "status": {
                    "type": "string"
                },
                "statusMessage": {
                    "type": "string"
                },
                "submittedAt": {
                    "type": "string"
                },
                "task": {
                    "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.Task"
                },
                "taskId": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.User"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.SubmissionResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "submissionId": {
                    "type": "integer"
                },
                "testResults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_mini-maxit_backend_package_domain_schemas.TestResult"
                    }
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.SubmitResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "submissionNumber": {
                    "type": "integer"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.Task": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.TaskCreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.TaskDetailed": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "createdByName": {
                    "type": "string"
                },
                "descriptionUrl": {
                    "type": "string"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.TestResult": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "inputOutputId": {
                    "type": "integer"
                },
                "passed": {
                    "type": "boolean"
                },
                "submissionResultId": {
                    "type": "integer"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/types.UserRole"
                },
                "surname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.UserChangePassword": {
            "type": "object",
            "required": [
                "newPassword",
                "newPasswordConfirm"
            ],
            "properties": {
                "newPassword": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 8
                },
                "newPasswordConfirm": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 8
                },
                "oldPassword": {
                    "type": "string"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.UserEdit": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/types.UserRole"
                },
                "surname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.UserIDs": {
            "type": "object",
            "properties": {
                "userIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.UserLoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.UserRegisterRequest": {
            "type": "object",
            "required": [
                "confirmPassword",
                "email",
                "name",
                "password",
                "surname",
                "username"
            ],
            "properties": {
                "confirmPassword": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 8
                },
                "surname": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                }
            }
        },
        "github_com_mini-maxit_backend_package_domain_schemas.WorkerStatus": {
            "type": "object",
            "properties": {
                "busyWorkers": {
                    "type": "integer"
                },
                "statusTime": {
                    "type": "string"
                },
                "totalWorkers": {
                    "type": "integer"
                },
                "workerStatus": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "types.UserRole": {
            "type": "string",
            "enum": [
                "student",
                "teacher",
                "admin"
            ],
            "x-enum-varnames": [
                "UserRoleStudent",
                "UserRoleTeacher",
                "UserRoleAdmin"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/api/v1.",
	Schemes:          []string{},
	Title:            "Mini-Maxit API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
