basePath: /api/v1.
definitions:
  APIError:
    properties:
      data:
        $ref: '#/definitions/errorStruct'
      ok:
        type: boolean
    type: object
  APIResponse-Group:
    properties:
      data:
        $ref: '#/definitions/Group'
      ok:
        type: boolean
    type: object
  APIResponse-Session:
    properties:
      data:
        $ref: '#/definitions/Session'
      ok:
        type: boolean
    type: object
  APIResponse-Submission:
    properties:
      data:
        $ref: '#/definitions/Submission'
      ok:
        type: boolean
    type: object
  APIResponse-SubmitResponse:
    properties:
      data:
        $ref: '#/definitions/SubmitResponse'
      ok:
        type: boolean
    type: object
  APIResponse-TaskCreateResponse:
    properties:
      data:
        $ref: '#/definitions/TaskCreateResponse'
      ok:
        type: boolean
    type: object
  APIResponse-TaskDetailed:
    properties:
      data:
        $ref: '#/definitions/TaskDetailed'
      ok:
        type: boolean
    type: object
  APIResponse-User:
    properties:
      data:
        $ref: '#/definitions/User'
      ok:
        type: boolean
    type: object
  APIResponse-array_Group:
    properties:
      data:
        items:
          $ref: '#/definitions/Group'
        type: array
      ok:
        type: boolean
    type: object
  APIResponse-array_LanguageConfig:
    properties:
      data:
        items:
          $ref: '#/definitions/LanguageConfig'
        type: array
      ok:
        type: boolean
    type: object
  APIResponse-array_Submission:
    properties:
      data:
        items:
          $ref: '#/definitions/Submission'
        type: array
      ok:
        type: boolean
    type: object
  APIResponse-array_Task:
    properties:
      data:
        items:
          $ref: '#/definitions/Task'
        type: array
      ok:
        type: boolean
    type: object
  APIResponse-int64:
    properties:
      data:
        type: integer
      ok:
        type: boolean
    type: object
  APIResponse-string:
    properties:
      data:
        type: string
      ok:
        type: boolean
    type: object
  CreateGroup:
    properties:
      name:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - name
    type: object
  EditGroup:
    properties:
      name:
        maxLength: 50
        minLength: 3
        type: string
    type: object
  Group:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  LanguageConfig:
    properties:
      file_extension:
        type: string
      id:
        type: integer
      language:
        type: string
      version:
        type: string
    type: object
  PutInputOutput:
    properties:
      memory_limit:
        type: integer
      order:
        type: integer
      time_limit:
        type: integer
    type: object
  PutInputOutputRequest:
    properties:
      limits:
        items:
          $ref: '#/definitions/PutInputOutput'
        type: array
    type: object
  Session:
    properties:
      expires_at:
        type: string
      session:
        type: string
      user_id:
        type: integer
      user_role:
        type: string
    type: object
  Submission:
    properties:
      checked_at:
        type: string
      id:
        type: integer
      language:
        $ref: '#/definitions/LanguageConfig'
      language_id:
        type: integer
      order:
        type: integer
      result:
        $ref: '#/definitions/SubmissionResult'
      status:
        type: string
      status_message:
        type: string
      submitted_at:
        type: string
      task:
        $ref: '#/definitions/Task'
      task_id:
        type: integer
      user:
        $ref: '#/definitions/User'
      user_id:
        type: integer
    type: object
  SubmissionResult:
    properties:
      code:
        type: string
      created_at:
        type: string
      id:
        type: integer
      message:
        type: string
      submission_id:
        type: integer
      test_results:
        items:
          $ref: '#/definitions/TestResult'
        type: array
    type: object
  SubmitResponse:
    properties:
      message:
        type: string
      submissionNumber:
        type: integer
    type: object
  Task:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  TaskCreateResponse:
    properties:
      id:
        type: integer
    type: object
  TaskDetailed:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      created_by_name:
        type: string
      description_url:
        type: string
      group_ids:
        items:
          type: integer
        type: array
      id:
        type: integer
      title:
        type: string
    type: object
  TestResult:
    properties:
      id:
        type: integer
      input_output_id:
        type: integer
      passed:
        type: boolean
      submission_result_id:
        type: integer
    type: object
  User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        $ref: '#/definitions/types.UserRole'
      surname:
        type: string
      username:
        type: string
    type: object
  UserChangePassword:
    properties:
      new_password:
        maxLength: 50
        minLength: 8
        type: string
      new_password_confirm:
        maxLength: 50
        minLength: 8
        type: string
      old_password:
        type: string
    required:
    - new_password
    - new_password_confirm
    type: object
  UserEdit:
    properties:
      email:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/types.UserRole'
      surname:
        type: string
      username:
        type: string
    type: object
  UserIDs:
    properties:
      userIDs:
        items:
          type: integer
        type: array
    type: object
  UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  UserRegisterRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      password:
        maxLength: 50
        minLength: 8
        type: string
      surname:
        maxLength: 50
        minLength: 3
        type: string
      username:
        maxLength: 30
        minLength: 3
        type: string
    required:
    - confirm_password
    - email
    - name
    - password
    - surname
    - username
    type: object
  errorStruct:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  types.UserRole:
    enum:
    - student
    - teacher
    - admin
    type: string
    x-enum-varnames:
    - UserRoleStudent
    - UserRoleTeacher
    - UserRoleAdmin
info:
  contact: {}
  title: Mini-Maxit API
  version: 1.0.0
paths:
  /group/:
    get:
      description: Get all groups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_Group'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all groups
      tags:
      - group
    post:
      consumes:
      - application/json
      description: Create a group
      parameters:
      - description: Create Group
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-int64'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Create a group
      tags:
      - group
  /group/{id}:
    get:
      description: Get a group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-Group'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get a group
      tags:
      - group
    put:
      consumes:
      - application/json
      description: Edit a group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      - description: Edit Group
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/EditGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-Group'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Edit a group
      tags:
      - group
  /group/{id}/users:
    delete:
      consumes:
      - application/json
      description: Delete users from a group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      - description: User IDs
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserIDs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Delete users from a group
      tags:
      - group
    get:
      description: Get users in a group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get users in a group
      tags:
      - group
    post:
      consumes:
      - application/json
      description: Add users to a group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      - description: User IDs
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserIDs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Add users to a group
      tags:
      - group
  /login:
    post:
      consumes:
      - application/json
      description: Logs in a user with email and password
      parameters:
      - description: User Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-Session'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Login a user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Registers a user with name, surname, email, username and password
      parameters:
      - description: User Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/APIResponse-Session'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Register a user
      tags:
      - auth
  /session/invalidate:
    post:
      description: Invalidates a session token
      parameters:
      - description: Session Token
        in: header
        name: Session
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Invalidate a session
      tags:
      - session
  /session/validate:
    get:
      description: Validates a session token
      parameters:
      - description: Session Token
        in: header
        name: Session
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Validate a session
      tags:
      - session
  /submission:
    get:
      description: Depending on the user role, this endpoint will return all submissions
        for the current user.
      parameters:
      - description: Limit the number of returned submissions
        in: query
        name: limit
        type: integer
      - description: Offset the returned submissions
        in: query
        name: offset
        type: integer
      - description: Session Token
        in: header
        name: Session
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_Submission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all submissions for the current user
      tags:
      - submission
  /submission/{id}:
    get:
      description: If the user is a student, the submission must belong to the user.
      parameters:
      - description: Submission ID
        in: path
        name: id
        required: true
        type: integer
      - description: Session Token
        in: header
        name: Session
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-Submission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get a submission by ID
      tags:
      - submission
  /submission/languages:
    get:
      description: Get all available languages for submitting solutions.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_LanguageConfig'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all available languages
      tags:
      - submission
  /submission/task/{id}:
    get:
      description: If the user is a student and has no access to this task, it fails
        with 403 Forbidden.
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Limit the number of returned submissions
        in: query
        name: limit
        type: integer
      - description: Offset the returned submissions
        in: query
        name: offset
        type: integer
      - description: Session Token
        in: header
        name: Session
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_Submission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all submissions for a task
      tags:
      - submission
  /submission/user/{id}:
    get:
      description: If the user is a student, it fails with 403 Forbidden.
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      - description: Limit the number of returned submissions
        in: query
        name: limit
        type: integer
      - description: Offset the returned submissions
        in: query
        name: offset
        type: integer
      - description: Session Token
        in: header
        name: Session
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_Submission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all submissions for a group
      tags:
      - submission
  /submission/user/{id}/short:
    get:
      description: If the user is a student, it fails with 403 Forbidden.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Limit the number of returned submissions
        in: query
        name: limit
        type: integer
      - description: Offset the returned submissions
        in: query
        name: offset
        type: integer
      - description: Session Token
        in: header
        name: Session
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_Submission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all submissions for a user
      tags:
      - submission
  /task/:
    get:
      description: Returns all tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_Task'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all tasks
      tags:
      - task
    post:
      consumes:
      - multipart/form-data
      description: Uploads a task to the FileStorage service
      parameters:
      - description: Name of the task
        in: formData
        name: title
        required: true
        type: string
      - description: Task archive
        in: formData
        name: archive
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-TaskCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Upload a task
      tags:
      - task
  /task/{id}:
    delete:
      description: Deletes a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Delete a task
      tags:
      - task
    get:
      description: Returns a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-TaskDetailed'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get a task
      tags:
      - task
    patch:
      description: Updates a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: New title for the task
        in: formData
        name: title
        type: string
      - description: New archive for the task
        in: formData
        name: archive
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Update a task
      tags:
      - task
  /task/{id}/assign/groups:
    post:
      description: Assigns a task to groups by task ID and group IDs
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Group IDs
        in: body
        name: groupIDs
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Assign a task to groups
      tags:
      - task
  /task/{id}/assign/users:
    post:
      description: Assigns a task to users by task ID and user IDs
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: User IDs
        in: body
        name: userIDs
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Assign a task to users
      tags:
      - task
  /task/{id}/limits:
    get:
      description: Gets task limits by task ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Gets task limits
      tags:
      - task
    put:
      description: Updates task limits by task ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task limits
        in: body
        name: limits
        required: true
        schema:
          $ref: '#/definitions/PutInputOutputRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Updates task limits
      tags:
      - task
  /task/{id}/unassign/groups:
    delete:
      description: Unassigns a task from groups by task ID and group IDs
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Group IDs
        in: body
        name: groupIDs
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Unassign a task from groups
      tags:
      - task
  /task/{id}/unassign/users:
    delete:
      description: Unassigns a task from users by task ID and user IDs
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: User IDs
        in: body
        name: userIDs
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Unassign a task from users
      tags:
      - task
  /task/group/{id}:
    get:
      description: Returns all tasks for a group by ID
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-array_Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all tasks for a group
      tags:
      - task
  /user/:
    get:
      description: Get all users
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-User'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get all users
      tags:
      - user
  /user/{id}:
    get:
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get user by ID
      tags:
      - user
    patch:
      description: Edit user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User Edit Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UserEdit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Edit user
      tags:
      - user
  /user/{id}/password:
    patch:
      description: Change user password
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User Change Password Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UserChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Change user password
      tags:
      - user
  /user/email:
    get:
      description: Get user by email
      parameters:
      - description: User email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/APIResponse-User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/APIError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/APIError'
      summary: Get user by email
      tags:
      - user
swagger: "2.0"
